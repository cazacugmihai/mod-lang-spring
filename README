A try to provide first class spring framework support for Vert.x as a lang mod.

Works very much similar to the Spring WebMVC based ContextLoaderListener.
SpringVerticleFactory creates an instance of the SpringContextInitializer.
In its start method application context is created as an instance of VertxApplicationContext.
Following beans are registered:
1. vertx -> org.vertx.java.core.Vertx
2. vertxContainer -> org.vertx.java.platform.Container
3. vertxEventBus -> org.vertx.java.core.eventbus.EventBus
4. vertxConfig -> org.vertx.java.core.json.JsonObject

Some lifecycle interfaces are also provided:
1. VertxAware
2. ContainerAware
3. EventBusAware
4. ConfigAware

Pre-req: Vert.x 2.0
Config:
1. update ${vertx.home}/conf/langs.properties
  spring=com.dsklyut~lang-spring~1.0.0-SNAPSHOT:com.dsklyut.vertx.spring.platform.impl.SpringVerticleFactory

Running:
1. Simple xml config
  ./bin/vertx run spring:file:/Users/dsklyut/Projects/sources/vert.x/mod-lang-spring/src/test/resources/contexts/test-config-1.xml
2. For mods - speicify a path to the xml config in the mod.json "main" attribute.

TODO:
1. Support for "parent context sharing" - still need to get a better handle on Vert.x deployment.  Might need an ExtendedVerticleFactory that provides an API to recieve a Deployment instance vs. just main
2. Support for configuration of Spring version -> right now 3.2.2 (up to spring-context is emmbeded in /lib of the module)
3. Support for JavaConfig based application context.
4. Provide a repo for the module (right now must be built locally) -> ./gradlew clean install (will put it in the .m2 and available to be looked up by vert.x 2.0 repo resolvers).


License:

Eclipse Public License (http://www.eclipse.org/org/documents/epl-v10.php)
